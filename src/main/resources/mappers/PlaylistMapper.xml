<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.beethoven.mapper.PlaylistMapper">
    <select id="getPlayList" resultType="org.beethoven.pojo.vo.PlaylistVo">
        select
            p.id,
            p.title,
            p.cover,
            count(mp.music_id)            as      music_count,
            a.username                    as      author
        from playlist p
            left join account a on p.creator = a.id
            left join music_playlist mp on p.id = mp.playlist_id
        group by p.id, p.title, p.cover, a.username
        order by id desc
        limit #{size} offset #{offset};
    </select>

    <select id="getPlaylistMusic" resultType="org.beethoven.pojo.vo.MusicVo">
        select
            m.id,
            m.name,
            m.singer,
            m.duration,
            m.size,
            m.album,
            m.mime,
            m.oss_music_name        as      link,
            m.oss_cover_name        as      cover
        from music_playlist mp
        inner join music m on mp.music_id = m.id
        where mp.playlist_id = #{playlistId}
        order by mp.music_id
        <if test="pageParam != null">
            limit #{pageParam.size} offset #{pageParam.offset};
        </if>
    </select>

    <select id="getPlaylistInfo" resultType="org.beethoven.pojo.vo.PlaylistVo">
        select
            p.id,
            p.title,
            p.cover,
            p.music_count,
            p.create_time,
            p.introduction,
            p.accessible,
            a.username          as      author
        from playlist p
            left join account a on p.creator = a.id
        where p.id = #{playlistId}
    </select>
    <select id="getHomePlaylist" resultType="org.beethoven.pojo.vo.PlaylistVo">
        select
            p.id,
            p.title,
            p.cover,
            count(mp.music_id)      as       music_count,
            a.username              as       author
        from playlist p
            left join account a on p.creator = a.id
            left join music_playlist mp on p.id = mp.playlist_id
        <where>
            and p.accessible = true
            <if test="key != null and key != ''">and (p.title like #{key} or a.username like #{key})</if>
        </where>
        group by p.id, p.title, p.cover, a.username
        order by id desc
        <if test="pageParam != null">
            limit #{pageParam.size} offset #{pageParam.offset};
        </if>
    </select>
</mapper>
